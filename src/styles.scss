/* You can add global styles to this file, and also import other style files */


//------------ Swiper imports and styles BEGIN:-------------
// @import "~swiper/css";
// @import "~swiper/css/effect-coverflow";
// @import "~swiper/css/pagination";


// .swiper {
//   width: 100%;
//   padding-top: 50px;
//   padding-bottom: 50px;
// }

// .swiper-slide {
//   background-position: center;
//   background-size: cover;
//   width: 300px;
//   height: 300px;
// }

// .swiper-slide img {
//   display: block;
//   width: 100%;
// }

//------------ Swiper imports and styles END:-------------



body {
  // height: 100vh;
  // background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
  // overflow: hidden;
  background-color: #f9f6f5;
  // filter: drop-shadow(0 0 10px white);
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.snow {
  cursor: pointer;
  background-size: cover;
  $total: 200;
  position: absolute;
  width: 50px;
  height: 50px;
  z-index: 1000;
  border-radius: 50%;

  @for $i from 1 through $total {
    $random-x: random(1000000) * 0.0001vw;
    $random-offset: random_range(-100000, 100000) * 0.0001vw;
    $random-x-end: $random-x + $random-offset;
    $random-x-end-yoyo: $random-x + ($random-offset / 2);
    $random-yoyo-time: random_range(30000, 80000) / 100000;
    $random-yoyo-y: $random-yoyo-time * 100vh;
    $random-scale: random(10000) * 0.0001;
    $fall-duration: random_range(10, 30) * 1s;
    $fall-delay: random(30) * -1s;

    &:nth-child(#{$i}) {
      // opacity: random(10000) * 0.0001;
      transform: translate($random-x, -10px) scale($random-scale);
      transform: translate($random-x, -10px) scale($random-scale);
      animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
    }

    @keyframes fall-#{$i} {
      #{percentage($random-yoyo-time)} {
        transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);
      }

      to {
        transform: translate($random-x-end-yoyo, 100vh) scale($random-scale);
      }
    }
  }
}

.snow-1 {
  @extend .snow;
  background-image: url('assets/snowflakes/1.png');
}

.snow-2 {
  @extend .snow;
  background-image: url('assets/snowflakes/2.png');
}
.snow-3 {
  @extend .snow;
  background-image: url('assets/snowflakes/3.png');
}

.snow-4 {
  @extend .snow;
  background-image: url('assets/snowflakes/4.png');
}
.snow-5 {
  @extend .snow;
  background-image: url('assets/snowflakes/5.png');
}

.snow-6 {
  @extend .snow;
  background-image: url('assets/snowflakes/6.png');
}
.snow-7 {
  @extend .snow;
  background-image: url('assets/snowflakes/7.png');
}

.snow-8 {
  @extend .snow;
  background-image: url('assets/snowflakes/8.png');
}


.snow-bear {
  cursor: pointer;
  background-size: cover;
  $total: 200;
  position: absolute;
  width: 45px;
  height: 45px;
  background-image: url('assets/bear.png');
  border-radius: 50%;

  @for $i from 1 through $total {
    $random-x: random(1000000) * 0.0001vw;
    $random-offset: random_range(-100000, 100000) * 0.0001vw;
    $random-x-end: $random-x + $random-offset;
    $random-x-end-yoyo: $random-x + ($random-offset / 2);
    $random-yoyo-time: random_range(30000, 80000) / 100000;
    $random-yoyo-y: $random-yoyo-time * 100vh;
    $random-scale: random(10000) * 0.0001;
    $fall-duration: random_range(10, 30) * 1s;
    $fall-delay: random(30) * -1s;

    &:nth-child(#{$i}) {
      opacity: random(10000) * 0.0001;
      transform: translate($random-x, -10px) scale($random-scale);
      animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
    }

    @keyframes fall-#{$i} {
      #{percentage($random-yoyo-time)} {
        transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);
      }

      to {
        transform: translate($random-x-end-yoyo, 100vh) scale($random-scale);
      }
    }
  }
}

